# Version tags only

name: Publish

on:
  push:
    branches: [main]

jobs:
  prePublishPackageTest:
    name: Prepublish package test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Retrieve dependencies from cache
        uses: actions/cache@v3
        id: cacheNpm
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-v16-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}

      - name: Install Node.js and npm
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        if: steps.cacheNpm.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save

      - name: Build local package
        run: npm pack

  npmPublish:
    name: Publish to npm
    needs: prePublishPackageTest
    runs-on: ubuntu-latest
    env:
      # It'll work with secrets.GITHUB_TOKEN (which is provided by GitHub unconditionally)
      # Still then release author would be "github-actions". It's better if it's dedicated repo bot
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Retrieve dependencies from cache
        uses: actions/cache@v3
        id: cacheNpm
        with:
          path: |
            ~/.npm
            node_modules
          key: npm-v16-${{ runner.os }}-refs/heads/main-${{ hashFiles('package.json') }}

      - name: Install Node.js and npm
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org

      # Normally we have a guarantee that deps are already there, still it may not be the case when:
      # - `main` build for same commit failed (and we still pushed tag manually)
      # - We've pushed tag manually before `main` build finalized
      - name: Install dependencies
        if: steps.cacheNpm.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save

      - name: Build standalone artifacts
        run: npm run pkg:build

      - name: Publish release notes
        run: |
          TEMP_ARRAY=($(echo $GITHUB_REF | tr "/" "\n"))
          TAG=${TEMP_ARRAY[@]: -1}
          npx github-release-from-cc-changelog 4.0.0

      - name: Publish standalone artifacts
        run: |
          TEMP_ARRAY=($(echo $GITHUB_REF | tr "/" "\n"))
          TAG=${TEMP_ARRAY[@]: -1}
          npm run pkg:upload -- 4.0.0
